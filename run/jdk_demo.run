source ${genode_dir}/repos/ports/run/api_key.inc

proc check_config {bin xml_file xsd_file label avail_xsd_files xsd_inc nesting_level} { }

set tap "tap0"
set mkfs [installed_command mkfs.fat]
set dd   [installed_command dd]


#catch { exec $dd if=/dev/zero of=bin/fat.raw bs=1M count=16 }
#catch { exec $mkfs -F16 bin/fat.raw }

set build_components {
	core init
	drivers/timer
	drivers/nic
	lib/vfs/lxip
	lib/vfs/rump
	app/fetchurl
	app/jdk/java
	server/dynamic_rom
	server/ram_fs
	server/fs_log
	server/vfs
}

lappend_if [have_spec gpio] build_components drivers/gpio

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components
create_boot_directory

append config {
<config verbose="yes">
	<parent-provides>
		<service name="ROM"/>
		<service name="LOG"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="PD"/>
		<service name="IRQ"/>
		<service name="IO_PORT"/>
		<service name="IO_MEM"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="100" />
	<start name="timer">
		<resource name="RAM" quantum="2M" />
		<provides> <service name="Timer" /> </provides>
	</start>}

append_if [have_spec nit6_solox] config {
	<start name="gpio_drv" caps="200">
		<resource name="RAM" quantum="8M"/>
		<provides><service name="Gpio"/></provides>
		<config/>
	</start>
}
append config {
	<start name="nic_drv" caps="300" ld="no">
		<binary name="} [nic_drv_binary] {"/>
		<resource name="RAM" quantum="32M" />
		<provides> <service name="Nic" /> </provides>
		<config ld_verbose="no">}

append_if [have_spec linux] config {
			<nic tap="} $tap {"/> }

append_if [have_spec nit6_solox] config {
			<card name="fec0" type="fsl,imx6sx-fec" mii="rgmii" phy="phy0" irq="150" mmio="0x2188000">
				<mdio>
					<phy name="phy0" type="Atheros 8035 ethernet" gpio_irq="36" reg_num="4"/>
					<phy name="phy1" type="Atheros 8035 ethernet" gpio_irq="40" reg_num="5"/>
				</mdio>
			</card>
			<card name="fec1" type="fsl,imx6sx-fec" mii="rgmii" phy="phy1" irq="134" mmio="0x21b4000"/>}

append config {
		</config>
	</start>

	<start name="disk">
		<binary name="ram_fs" />
		<resource name="RAM" quantum="32M" />
		<provides><service name="File_system"/></provides>
		<config>
			<content>
				<rom name="dresden"/>
				<rom name="leipzig"/>
				<rom name="nuremberg"/>
				<rom name="hamburg"/>
			</content>
			<policy label_prefix="download -> fetchurl" writeable="yes" root="/"/>
			<policy label_prefix="java" writeable="no" root="/" />
			<policy label_prefix="fs_log" writeable="yes" root="/" />
		</config>
	</start>

	Â·<start name="fs_log">
			<resource name="RAM" quantum="2M"/>
			<provides><service name="LOG"/></provides>
			<config>
				<default-policy />
			</config>
		</start>

<!--
	<start name="dynamic_rom">
		<resource name="RAM" quantum="8M" />
		<provides><service name="ROM"/></provides>
		<config>
			<rom name="download.config">
				<inline description="download">
					<config>
						<parent-provides>
							<service name="ROM"/>
							<service name="RAM"/>
							<service name="PD"/>
							<service name="RM"/>
							<service name="CPU"/>
							<service name="LOG"/>
							<service name="Nic"/>
							<service name="Timer"/>
							<service name="File_system"/>
						</parent-provides>
						<start name="fetchurl" caps="500">
						<resource name="RAM" quantum="40M"/>
							<config>
								<vfs>
									<dir name="etc">
										<inline name="resolv.conf">nameserver 1.1.1.1</inline>
									</dir>
									<dir name="dev">
										<log/>
										<null/>
										<inline name="rtc">2000-01-01 00:00</inline>
										<inline name="random">01234567890123456789</inline>
									</dir>
									<fs/>
									<dir name="socket"> <lxip dhcp="yes"/> </dir>
								</vfs>
								<libc stdout="/dev/log" stderr="/dev/log" rtc="/dev/rtc" socket="/socket"/>
								<fetch url="http://api.openweathermap.org/data/2.5/weather?q=Dresden,de&mode=xml&appid=} $api_key {" path="/dresden" />
								<fetch url="http://api.openweathermap.org/data/2.5/weather?q=Hamburg,de&mode=xml&appid=} $api_key {" path="/hamburg" />
								<fetch url="http://api.openweathermap.org/data/2.5/weather?q=Leipzig,de&mode=xml&appid=} $api_key {" path="/leipzig" />
								<fetch url="http://api.openweathermap.org/data/2.5/weather?q=Nuremberg,de&mode=xml&appid=} $api_key {" path="/nuremberg" />
							</config>
							<route> <any-service> <parent/> </any-service> </route>
						</start>
					</config>
				</inline>
				<sleep milliseconds="30000" />
				<inline description="empty">
					<config>
						<parent-provides>
							<service name="ROM"/>
							<service name="RAM"/>
							<service name="PD"/>
							<service name="RM"/>
							<service name="CPU"/>
							<service name="LOG"/>
							<service name="Nic"/>
							<service name="Timer"/>
							<service name="Block"/>
						</parent-provides>
					</config>
				</inline>
				<sleep milliseconds="60000" />
			</rom>
		</config>
	</start>

	<start name="download" caps="800">
		<binary name="init" />
		<resource name="RAM" quantum="64M" />
		<configfile name="download.config" />
		<route>
			<service name="ROM" label="download.config"><child name="dynamic_rom"/></service>
			<service name="Nic"><child name="nic_drv" label="fec0" /></service>
			<service name="Timer"><child name="timer"/></service>
			<service name="File_system"><child name="disk" /></service>
			<any-service><parent/><any-child/></any-service>
		</route>
	</start>
-->

	<start name="java" caps="750">
		<resource name="RAM" quantum="256M" />
		<route>
			<service name="ROM" label="zip.lib.so">
				<parent label="jzip.lib.so" />
			</service>
			<service name="ROM" label="net.lib.so">
				<parent label="jnet.lib.so" />
			</service>
			<service name="Nic"><child name="nic_drv" label="fec1" /></service>
			<!-- <service name="LOG"><child name="fs_log" /></service> -->
			<any-service> <parent/> <any-child/> </any-service>
		</route>
		<config ld_verbose="yes">
			<arg value="/bin/java" />
			<arg value="-XX:+NeverActAsServerClassMachine"/>
			<arg value="-XX:+UnlockDiagnosticVMOptions"/>
			<arg value="-XX:-ImplicitNullChecks"/>
			<arg value="-XX:+CITime" />
			<arg value="-Xlog:gc" />
			<arg value="-jar" />
			<arg value="servlet.jar" />
			<libc stdin="/dev/null" stdout="/dev/log" stderr="/dev/log" rtc="/dev/rtc" socket="/dev/socket" />
			<vfs>
				<dir name="etc">
					<inline name="resolv.conf">nameserver 1.1.1.1</inline>
				</dir>
				<dir name="dev">
					<dir name="socket"> <lxip ip_addr="10.0.0.16" netmask="255.255.255.0" gateway="10.0.0.1"/> </dir>
					<log/><null/><inline name="rtc">2000-01-01 00:00</inline>
				</dir>
				<fs />
				<dir name="bin">
					<rom name="java" />
				</dir>
				<dir name="lib">
					<rom name="java.lib.so" />
					<inline name="jvm.cfg">-server KNOWN
-client IGNORE
</inline>
					<dir name="server">
						<rom name="jvm.lib.so" />
					</dir>
					<dir name="security">
						<rom name="default.policy" />
					</dir>
					<rom name="tzdb.dat"/>
				</dir>
				<dir name="modules">
					<tar name="classes.tar" />
				</dir>
				<dir name="var">
					<dir name="tmp"> <ram/> </dir>
				</dir>
				<rom name="zip.lib.so" />
				<rom name="nio.lib.so" />
				<rom name="net.lib.so" />
				<rom name="management.lib.so" />
				<tar name="servlet.tar"/>
			</vfs>
		</config>
	</start>
}

append_platform_drv_config

append config {
</config>
}

install_config $config

set boot_modules {
	core init ld.lib.so timer

	dynamic_rom vfs ram_fs fs_log

	java jli.lib.so servlet.tar httpserver.tar
	java.lib.so jvm.lib.so jzip.lib.so jimage.lib.so
	libc.lib.so libm.lib.so zlib.lib.so nio.lib.so jnet.lib.so

	management.lib.so

	stdcxx.lib.so vfs.lib.so
	vfs_lxip.lib.so lxip.lib.so libc_pipe.lib.so

	curl.lib.so libcrypto.lib.so libssh.lib.so libssl.lib.so
	fetchurl

	classes.tar 
	default.policy
	dresden hamburg leipzig nuremberg tzdb.dat
}

append boot_modules [nic_drv_binary]
lappend_if [have_spec gpio] boot_modules gpio_drv

append_platform_drv_boot_modules

build_boot_image $boot_modules

run_genode_until forever
